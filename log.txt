class Logger {
  constructor(options) {
    this.timestampBool = options.timestampBool || false;
    this.colors = options.colors || false;
    this.logPath = options.logPath;

    if (!this.logPath) throw new Error("No log path provided");

    const date = new Date();
    const timestamp = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;
    this.file = fs.createWriteStream(
      path.resolve(this.logPath, `LOG : ${timestamp}`),
      { flags: "a" }
    );

    this.file.write(`
    LOG STARTED AT ${timestamp}
    `);

    this.file.on("error", (err) => {
      console.error(err);
    });
  }

  //#region Public Methods

  log(message) {
    const date = new Date();
    const timestamp = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;
    if (this.timestampBool) {
      if (this.colors) {
        this.file.write(`[${timestamp}] ${message} \n`);
        console.log(`[${timestamp}] ${message}`.green);
      } else {
        this.file.write(`[${timestamp}] ${message} \n`);
        console.log(`[${timestamp}] ${message}`);
      }
    } else {
      if (this.colors) {
        this.file.write(`${message} \n`);
        console.log(`${message}`.green);
      } else {
        this.file.write(`${message} \n`);
        console.log(`${message}`);
      }
    }
  }

  error(message) {
    const date = new Date();
    const timestamp = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;
    if (this.timestampBool) {
      if (this.colors) {
        this.file.write(`[${timestamp}] ${message} \n`);
        console.log(`[${timestamp}] ${message}`.red);
      } else {
        this.file.write(`[${timestamp}] ${message} \n`);
        console.log(`[${timestamp}] ${message}`);
      }
    } else {
      if (this.colors) {
        this.file.write(`${message} \n`);
        console.log(`${message}`.red);
      } else {
        this.file.write(`${message} \n`);
        console.log(`${message}`);
      }
    }
  }

  warn(message) {
    const date = new Date();
    const timestamp = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;
    if (this.timestampBool) {
      if (this.colors) {
        this.file.write(`[${timestamp}] ${message} \n`);
        console.log(`[${timestamp}] ${message}`.yellow);
      } else {
        this.file.write(`[${timestamp}] ${message} \n`);
        console.log(`[${timestamp}] ${message}`);
      }
    } else {
      if (this.colors) {
        this.file.write(`${message} \n`);
        console.log(`${message}`.yellow);
      } else {
        this.file.write(`${message} \n`);
        console.log(`${message}`);
      }
    }
  }

  info(message) {
    const date = new Date();
    const timestamp = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;
    if (this.timestampBool) {
      if (this.colors) {
        this.file.write(`[${timestamp}] ${message} \n`);
        console.log(`[${timestamp}] ${message}`.blue);
      } else {
        this.file.write(`[${timestamp}] ${message} \n`);
        console.log(`[${timestamp}] ${message}`);
      }
    } else {
      if (this.colors) {
        this.file.write(`${message} \n`);
        console.log(`${message}`.blue);
      } else {
        this.file.write(`${message} \n`);
        console.log(`${message}`);
      }
    }

    //#endregion
  }
}